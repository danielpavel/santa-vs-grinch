//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! <https://github.com/kinobi-so/kinobi>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum SantaVsGrinchError {
    /// 6000 - Invalid deposit vault account
    #[error("Invalid deposit vault account")]
    InvalidVaultDepositAccount = 0x1770,
    /// 6001 - Invalid winnings vault account
    #[error("Invalid winnings vault account")]
    InvalidVaultWinningsAccount = 0x1771,
    /// 6002 - Invalid admin
    #[error("Invalid admin")]
    InvalidAdmin = 0x1772,
    /// 6003 - Invalid bet side
    #[error("Invalid bet side")]
    InvalidBetSide = 0x1773,
    /// 6004 - Invalid fees vault account
    #[error("Invalid fees vault account")]
    InvalidFeesVaultDepositAccount = 0x1774,
    /// 6005 - Invalid Percentage
    #[error("Invalid Percentage")]
    InvalidPercentage = 0x1775,
    /// 6006 - Game has already ended
    #[error("Game has already ended")]
    GameEnded = 0x1776,
    /// 6007 - Game has not ended yet
    #[error("Game has not ended yet")]
    GameNotEnded = 0x1777,
    /// 6008 - User has already claimed
    #[error("User has already claimed")]
    AlreadyClaimed = 0x1778,
    /// 6009 - Invalid total shares
    #[error("Invalid total shares")]
    InvalidTotalShares = 0x1779,
    /// 6010 - Too Many Creators
    #[error("Too Many Creators")]
    TooManyCreators = 0x177A,
    /// 6011 - InvalidCreatorAddress
    #[error("InvalidCreatorAddress")]
    InvalidCreatorAddress = 0x177B,
    /// 6012 - InvalidBetTag
    #[error("InvalidBetTag")]
    InvalidBetTag = 0x177C,
}

impl solana_program::program_error::PrintProgramError for SantaVsGrinchError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

